{"version":3,"file":"js-data-redis.js","sources":["../src/index.js"],"sourcesContent":["import redis from 'redis'\nimport {\n  Query,\n  utils\n} from 'js-data'\nimport Adapter from 'js-data-adapter'\nimport {\n  Response\n} from 'js-data-adapter'\nimport underscore from 'mout/string/underscore'\nimport unique from 'mout/array/unique'\nimport guid from 'mout/random/guid'\n\nconst {\n  addHiddenPropsToTarget,\n  classCallCheck,\n  deepMixIn,\n  extend,\n  fillIn,\n  forEachRelation,\n  get,\n  isArray,\n  isObject,\n  isUndefined,\n  omit,\n  plainCopy,\n  resolve\n} = utils\n\nconst withoutRelations = function (mapper, props) {\n  return omit(props, mapper.relationFields || [])\n}\n\nfunction getPath (resourceConfig) {\n  if (resourceConfig) {\n    return resourceConfig.table || underscore(resourceConfig.name)\n  }\n}\n\nconst DEFAULTS = {\n  /**\n   * Redis host.\n   *\n   * @name RedisAdapter#host\n   * @type {string}\n   * @default \"127.0.0.1\"\n   */\n  host: '127.0.0.1',\n\n  /**\n   * Redis port.\n   *\n   * @name RedisAdapter#port\n   * @type {number}\n   * @default 6379\n   */\n  port: 6379\n}\n\n/**\n * RedisAdapter class.\n *\n * @example\n * // Use Container instead of DataStore on the server\n * import {Container} from 'js-data'\n * import RedisAdapter from 'js-data-redis'\n *\n * // Create a store to hold your Mappers\n * const store = new Container()\n *\n * // Create an instance of RedisAdapter with default settings\n * const adapter = new RedisAdapter()\n *\n * // Mappers in \"store\" will use the Redis adapter by default\n * store.registerAdapter('redis', adapter, { default: true })\n *\n * // Create a Mapper that maps to a \"user\" table\n * store.defineMapper('user')\n *\n * @class RedisAdapter\n * @extends Adapter\n * @param {Object} [opts] Configuration opts.\n * @param {boolean} [opts.debug=false] Whether to log debugging information.\n * @param {boolean} [opts.raw=false] Whether to return a more detailed response object.\n */\nexport default function RedisAdapter (opts) {\n  const self = this\n  classCallCheck(self, RedisAdapter)\n  opts || (opts = {})\n  fillIn(opts, DEFAULTS)\n  Adapter.call(self, opts)\n\n  /**\n   * The Redis client used by this adapter. Use this directly when you need to\n   * write custom queries.\n   *\n   * @name RedisAdapter#client\n   * @type {Object}\n   */\n  self.client = redis.createClient(opts.port, opts.host, opts)\n}\n\n// Setup prototype inheritance from Adapter\nRedisAdapter.prototype = Object.create(Adapter.prototype, {\n  constructor: {\n    value: RedisAdapter,\n    enumerable: false,\n    writable: true,\n    configurable: true\n  }\n})\n\nObject.defineProperty(RedisAdapter, '__super__', {\n  configurable: true,\n  value: Adapter\n})\n\n/**\n * Alternative to ES6 class syntax for extending `RedisAdapter`.\n *\n * @name RedisAdapter.extend\n * @method\n * @param {Object} [instanceProps] Properties that will be added to the\n * prototype of the RedisAdapter.\n * @param {Object} [classProps] Properties that will be added as static\n * properties to the RedisAdapter itself.\n * @return {Object} RedisAdapter of `RedisAdapter`.\n */\nRedisAdapter.extend = extend\n\naddHiddenPropsToTarget(RedisAdapter.prototype, {\n  getIds (mapper) {\n    const self = this\n    return new Promise(function (resolve, reject) {\n      return self.client.SMEMBERS(getPath(mapper), function (err, ids) {\n        if (err) {\n          return reject(err)\n        }\n        return resolve(ids.filter(function (id) {\n          return id !== 'undefined'\n        }))\n      })\n    })\n  },\n\n  GET (path) {\n    const self = this\n    return new Promise(function (resolve, reject) {\n      return self.client.GET(path, function (err, value) {\n        return err ? reject(err) : resolve(isUndefined(value) ? value : JSON.parse(value))\n      })\n    })\n  },\n\n  /**\n   * Create a new record.\n   *\n   * @name RedisAdapter#create\n   * @method\n   * @param {Object} mapper The mapper.\n   * @param {Object} props The record to be created.\n   * @param {Object} [opts] Configuration options.\n   * @param {boolean} [opts.raw=false] Whether to return a more detailed\n   * response object.\n   * @return {Promise}\n   */\n  create (mapper, props, opts) {\n    const self = this\n    let op\n    const idAttribute = mapper.idAttribute\n    props || (props = {})\n    opts || (opts = {})\n\n    // beforeCreate lifecycle hook\n    op = opts.op = 'beforeCreate'\n    return resolve(self[op](mapper, props, opts)).then(function (_props) {\n      // Allow for re-assignment from lifecycle hook\n      props = isUndefined(_props) ? props : _props\n      let __props = plainCopy(props)\n      let id = __props[idAttribute]\n      if (isUndefined(id)) {\n        __props[idAttribute] = id = guid()\n      }\n      op = opts.op = 'create'\n      self.dbg(op, mapper, __props, opts)\n      return new Promise(function (resolve, reject) {\n        __props = JSON.stringify(__props)\n        return self.client\n          .multi()\n          .SET(`${getPath(mapper)}-${id}`, __props)\n          .SADD(getPath(mapper), id)\n          .exec(function (err) {\n            return err ? reject(err) : resolve(JSON.parse(__props))\n          })\n      })\n    }).then(function (record) {\n      let response = new Response(record, {}, 'create')\n      response.created = record ? 1 : 0\n      response = self.respond(response, opts)\n\n      // afterCreate lifecycle hook\n      op = opts.op = 'afterCreate'\n      return resolve(self[op](mapper, props, opts, response)).then(function (_response) {\n        // Allow for re-assignment from lifecycle hook\n        return isUndefined(_response) ? response : _response\n      })\n    })\n  },\n\n  /**\n   * Create multiple records in a single batch.\n   *\n   * @name RedisAdapter#createMany\n   * @method\n   * @param {Object} mapper The mapper.\n   * @param {Object} props The records to be created.\n   * @param {Object} [opts] Configuration options.\n   * @param {boolean} [opts.raw=false] Whether to return a more detailed\n   * response object.\n   * @return {Promise}\n   */\n  createMany (mapper, props, opts) {\n    const self = this\n    let op\n    props || (props = {})\n    opts || (opts = {})\n    props = plainCopy(props)\n\n    // beforeCreateMany lifecycle hook\n    op = opts.op = 'beforeCreateMany'\n    return resolve(self[op](mapper, props, opts)).then(function (_props) {\n      // Allow for re-assignment from lifecycle hook\n      props = isUndefined(_props) ? props : _props\n      _props = props.map(function (record) {\n        return withoutRelations(mapper, record)\n      })\n      op = opts.op = 'createMany'\n      self.dbg(op, mapper, props, opts)\n      const _path = getPath(mapper)\n      const idAttribute = mapper.idAttribute\n      return Promise.all(_props.map(function (_record) {\n        return new Promise(function (resolve, reject) {\n          let id = _record[idAttribute]\n          if (isUndefined(id)) {\n            _record[idAttribute] = id = guid()\n          }\n          _record = JSON.stringify(_record)\n          return self.client\n            .multi()\n            .SET(`${_path}-${id}`, _record)\n            .SADD(_path, id)\n            .exec(function (err) {\n              return err ? reject(err) : resolve(JSON.parse(_record))\n            })\n        })\n      }))\n    }).then(function (records) {\n      let response = new Response(records, {}, 'createMany')\n      response.created = records.length\n      response = self.respond(response, opts)\n\n      // afterCreateMany lifecycle hook\n      op = opts.op = 'afterCreateMany'\n      return resolve(self[op](mapper, props, opts, response)).then(function (_response) {\n        // Allow for re-assignment from lifecycle hook\n        return isUndefined(_response) ? response : _response\n      })\n    })\n  },\n\n  /**\n   * Destroy the record with the given primary key.\n   *\n   * @name RedisAdapter#destroy\n   * @method\n   * @param {Object} mapper The mapper.\n   * @param {(string|number)} id Primary key of the record to destroy.\n   * @param {Object} [opts] Configuration options.\n   * @param {boolean} [opts.raw=false] Whether to return a more detailed\n   * response object.\n   * @return {Promise}\n   */\n  destroy (mapper, id, opts) {\n    const self = this\n    let op\n    opts || (opts = {})\n\n    // beforeDestroy lifecycle hook\n    op = opts.op = 'beforeDestroy'\n    return resolve(self[op](mapper, id, opts)).then(function () {\n      op = opts.op = 'destroy'\n      self.dbg(op, mapper, id, opts)\n      return new Promise(function (resolve, reject) {\n        return self.client\n          .multi()\n          .DEL(`${getPath(mapper)}-${id}`)\n          .SREM(getPath(mapper), id)\n          .exec(function (err) {\n            return err ? reject(err) : resolve()\n          })\n      })\n    }).then(function () {\n      let response = new Response(undefined, {}, 'destroy')\n      response = self.respond(response, opts)\n\n      // afterDestroy lifecycle hook\n      op = opts.op = 'afterDestroy'\n      return resolve(self[op](mapper, id, opts, response)).then(function (_response) {\n        // Allow for re-assignment from lifecycle hook\n        return isUndefined(_response) ? response : _response\n      })\n    })\n  },\n\n  /**\n   * Destroy the records that match the selection query.\n   *\n   * @name RedisAdapter#destroyAll\n   * @method\n   * @param {Object} mapper the mapper.\n   * @param {Object} [query] Selection query.\n   * @param {Object} [query.where] Filtering criteria.\n   * @param {string|Array} [query.orderBy] Sorting criteria.\n   * @param {string|Array} [query.sort] Same as `query.sort`.\n   * @param {number} [query.limit] Limit results.\n   * @param {number} [query.skip] Offset results.\n   * @param {number} [query.offset] Same as `query.skip`.\n   * @param {Object} [opts] Configuration options.\n   * @param {boolean} [opts.raw=false] Whether to return a more detailed\n   * response object.\n   * @return {Promise}\n   */\n  destroyAll (mapper, query, opts) {\n    const self = this\n    let op\n    query || (query = {})\n    opts || (opts = {})\n\n    // beforeDestroyAll lifecycle hook\n    op = opts.op = 'beforeDestroyAll'\n    return resolve(self[op](mapper, query, opts)).then(function () {\n      op = opts.op = 'destroyAll'\n      self.dbg(op, mapper, query, opts)\n      return self.findAll(mapper, query, { raw: false }).then(function (records) {\n        const _path = getPath(mapper)\n        const idAttribute = mapper.idAttribute\n        return Promise.all(records.map(function (record) {\n          return new Promise(function (resolve, reject) {\n            const id = record[idAttribute]\n            return self.client\n              .multi()\n              .DEL(`${_path}-${id}`)\n              .SREM(_path, id)\n              .exec(function (err) {\n                return err ? reject(err) : resolve()\n              })\n          })\n        }))\n      })\n    }).then(function () {\n      let response = new Response(undefined, {}, 'destroyAll')\n      response = self.respond(response, opts)\n\n      // afterDestroyAll lifecycle hook\n      op = opts.op = 'afterDestroyAll'\n      return resolve(self[op](mapper, query, opts, response)).then(function (_response) {\n        // Allow for re-assignment from lifecycle hook\n        return isUndefined(_response) ? response : _response\n      })\n    })\n  },\n\n  /**\n   * Retrieve the record with the given primary key.\n   *\n   * @name RedisAdapter#find\n   * @method\n   * @param {Object} mapper The mapper.\n   * @param {(string|number)} id Primary key of the record to retrieve.\n   * @param {Object} [opts] Configuration options.\n   * @param {boolean} [opts.raw=false] Whether to return a more detailed\n   * response object.\n   * @param {string[]} [opts.with=[]] Relations to eager load.\n   * @return {Promise}\n   */\n  find (mapper, id, opts) {\n    const self = this\n    let record, op\n    opts || (opts = {})\n    opts.with || (opts.with = [])\n\n    // beforeFind lifecycle hook\n    op = opts.op = 'beforeFind'\n    return resolve(self[op](mapper, id, opts)).then(function () {\n      op = opts.op = 'find'\n      self.dbg(op, id, opts)\n      return self.GET(`${getPath(mapper)}-${id}`)\n    }).then(function (_record) {\n      if (!_record) {\n        return\n      }\n      record = _record\n      const tasks = []\n\n      forEachRelation(mapper, opts, function (def, __opts) {\n        const relatedMapper = def.getRelation()\n        let task\n\n        if (def.foreignKey && (def.type === 'hasOne' || def.type === 'hasMany')) {\n          if (def.type === 'hasOne') {\n            task = self.loadHasOne(mapper, def, record, __opts)\n          } else {\n            task = self.loadHasMany(mapper, def, record, __opts)\n          }\n        } else if (def.type === 'hasMany' && def.localKeys) {\n          let localKeys = []\n          let itemKeys = get(record, def.localKeys) || []\n          itemKeys = isArray(itemKeys) ? itemKeys : Object.keys(itemKeys)\n          localKeys = localKeys.concat(itemKeys)\n          task = self.findAll(relatedMapper, {\n            where: {\n              [relatedMapper.idAttribute]: {\n                'in': unique(localKeys).filter(function (x) { return x })\n              }\n            }\n          }, __opts).then(function (relatedItems) {\n            def.setLocalField(record, relatedItems)\n          })\n        } else if (def.type === 'hasMany' && def.foreignKeys) {\n          task = self.findAll(relatedMapper, {\n            where: {\n              [def.foreignKeys]: {\n                'contains': self.makeHasManyForeignKeys(mapper, def, record)\n              }\n            }\n          }, __opts).then(function (relatedItems) {\n            def.setLocalField(record, relatedItems)\n          })\n        } else if (def.type === 'belongsTo') {\n          task = self.loadBelongsTo(mapper, def, record, __opts)\n        }\n        if (task) {\n          tasks.push(task)\n        }\n      })\n\n      return Promise.all(tasks)\n    }).then(function () {\n      let response = new Response(record, {}, 'find')\n      response.found = record ? 1 : 0\n      response = self.respond(response, opts)\n\n      // afterFind lifecycle hook\n      op = opts.op = 'afterFind'\n      return resolve(self[op](mapper, id, opts, response)).then(function (_response) {\n        // Allow for re-assignment from lifecycle hook\n        return isUndefined(_response) ? response : _response\n      })\n    })\n  },\n\n  /**\n   * Retrieve the records that match the selection query.\n   *\n   * @name RedisAdapter#findAll\n   * @method\n   * @param {Object} mapper The mapper.\n   * @param {Object} [query] Selection query.\n   * @param {Object} [query.where] Filtering criteria.\n   * @param {string|Array} [query.orderBy] Sorting criteria.\n   * @param {string|Array} [query.sort] Same as `query.sort`.\n   * @param {number} [query.limit] Limit results.\n   * @param {number} [query.skip] Offset results.\n   * @param {number} [query.offset] Same as `query.skip`.\n   * @param {Object} [opts] Configuration options.\n   * @param {boolean} [opts.raw=false] Whether to return a more detailed\n   * response object.\n   * @param {string[]} [opts.with=[]] Relations to eager load.\n   * @return {Promise}\n   */\n  findAll (mapper, query, opts) {\n    const self = this\n    let records = []\n    let op\n    opts || (opts = {})\n    opts.with || (opts.with = [])\n\n    // beforeFindAll lifecycle hook\n    op = opts.op = 'beforeFindAll'\n    return resolve(self[op](mapper, query, opts)).then(function () {\n      op = opts.op = 'findAll'\n      self.dbg(op, query, opts)\n\n      return self.getIds(mapper)\n    }).then(function (ids) {\n      const path = getPath(mapper)\n      return Promise.all(ids.map(function (id) {\n        return self.GET(`${path}-${id}`)\n      }))\n    }).then(function (_records) {\n      const _query = new Query({\n        index: {\n          getAll () {\n            return _records\n          }\n        }\n      })\n      records = _query.filter(query).run()\n      const tasks = []\n      forEachRelation(mapper, opts, function (def, __opts) {\n        const relatedMapper = def.getRelation()\n        const idAttribute = mapper.idAttribute\n        let task\n        if (def.foreignKey && (def.type === 'hasOne' || def.type === 'hasMany')) {\n          if (def.type === 'hasMany') {\n            task = self.loadHasMany(mapper, def, records, __opts)\n          } else {\n            task = self.loadHasOne(mapper, def, records, __opts)\n          }\n        } else if (def.type === 'hasMany' && def.localKeys) {\n          let localKeys = []\n          records.forEach(function (item) {\n            let itemKeys = item[def.localKeys] || []\n            itemKeys = isArray(itemKeys) ? itemKeys : Object.keys(itemKeys)\n            localKeys = localKeys.concat(itemKeys)\n          })\n          task = self.findAll(relatedMapper, {\n            where: {\n              [relatedMapper.idAttribute]: {\n                'in': unique(localKeys).filter(function (x) { return x })\n              }\n            }\n          }, __opts).then(function (relatedItems) {\n            records.forEach(function (item) {\n              let attached = []\n              let itemKeys = get(item, def.localKeys) || []\n              itemKeys = isArray(itemKeys) ? itemKeys : Object.keys(itemKeys)\n              relatedItems.forEach(function (relatedItem) {\n                if (itemKeys && itemKeys.indexOf(relatedItem[relatedMapper.idAttribute]) !== -1) {\n                  attached.push(relatedItem)\n                }\n              })\n              def.setLocalField(item, attached)\n            })\n            return relatedItems\n          })\n        } else if (def.type === 'hasMany' && def.foreignKeys) {\n          task = self.findAll(relatedMapper, {\n            where: {\n              [def.foreignKeys]: {\n                'isectNotEmpty': records.map(function (record) {\n                  return self.makeHasManyForeignKeys(mapper, def, record)\n                })\n              }\n            }\n          }, __opts).then(function (relatedItems) {\n            const foreignKeysField = def.foreignKeys\n            records.forEach(function (record) {\n              const _relatedItems = []\n              const id = get(record, idAttribute)\n              relatedItems.forEach(function (relatedItem) {\n                const foreignKeys = get(relatedItems, foreignKeysField) || []\n                if (foreignKeys.indexOf(id) !== -1) {\n                  _relatedItems.push(relatedItem)\n                }\n              })\n              def.setLocalField(record, _relatedItems)\n            })\n          })\n        } else if (def.type === 'belongsTo') {\n          task = self.loadBelongsTo(mapper, def, records, __opts)\n        }\n        if (task) {\n          tasks.push(task)\n        }\n      })\n      return Promise.all(tasks)\n    }).then(function () {\n      // afterFindAll lifecycle hook\n      op = opts.op = 'afterFindAll'\n      return resolve(self[op](mapper, query, opts, records)).then(function (_records) {\n        // Allow for re-assignment from lifecycle hook\n        records = isUndefined(_records) ? records : _records\n        return opts.raw ? {\n          data: records,\n          found: records.length\n        } : records\n      })\n    })\n  },\n\n  _update (mapper, records, props) {\n    const self = this\n    const idAttribute = mapper.idAttribute\n    const _path = getPath(mapper)\n    if (isObject(records) && !isArray(records)) {\n      records = [records]\n    }\n    return Promise.all(records.map(function (record) {\n      deepMixIn(record, props)\n      return new Promise(function (resolve, reject) {\n        self.client.SET(`${_path}-${record[idAttribute]}`, JSON.stringify(record), function (err) {\n          return err ? reject(err) : resolve(record)\n        })\n      })\n    }))\n  },\n\n  /**\n   * Apply the given update to the record with the specified primary key.\n   *\n   * @name RedisAdapter#update\n   * @method\n   * @param {Object} mapper The mapper.\n   * @param {(string|number)} id The primary key of the record to be updated.\n   * @param {Object} props The update to apply to the record.\n   * @param {Object} [opts] Configuration options.\n   * @param {boolean} [opts.raw=false] Whether to return a more detailed\n   * response object.\n   * @return {Promise}\n   */\n  update (mapper, id, props, opts) {\n    const self = this\n    props || (props = {})\n    opts || (opts = {})\n    let op\n\n    // beforeUpdate lifecycle hook\n    op = opts.op = 'beforeUpdate'\n    return resolve(self[op](mapper, id, props, opts)).then(function (_props) {\n      // Allow for re-assignment from lifecycle hook\n      props = isUndefined(_props) ? props : _props\n      op = opts.op = 'update'\n      self.dbg(op, mapper, id, props, opts)\n      return self.GET(`${getPath(mapper)}-${id}`).then(function (record) {\n        if (!record) {\n          throw new Error('Not Found')\n        }\n        return self._update(mapper, record, props).then(function (records) {\n          return records[0]\n        })\n      })\n    }).then(function (record) {\n      let response = new Response(record, {}, 'update')\n      response.updated = 1\n      response = self.respond(response, opts)\n\n      // afterUpdate lifecycle hook\n      op = opts.op = 'afterUpdate'\n      return resolve(self[op](mapper, id, props, opts, response)).then(function (_response) {\n        // Allow for re-assignment from lifecycle hook\n        return isUndefined(_response) ? response : _response\n      })\n    })\n  },\n\n  /**\n   * Apply the given update to all records that match the selection query.\n   *\n   * @name RedisAdapter#updateAll\n   * @method\n   * @param {Object} mapper The mapper.\n   * @param {Object} props The update to apply to the selected records.\n   * @param {Object} [query] Selection query.\n   * @param {Object} [query.where] Filtering criteria.\n   * @param {string|Array} [query.orderBy] Sorting criteria.\n   * @param {string|Array} [query.sort] Same as `query.sort`.\n   * @param {number} [query.limit] Limit results.\n   * @param {number} [query.skip] Offset results.\n   * @param {number} [query.offset] Same as `query.skip`.\n   * @param {Object} [opts] Configuration options.\n   * @param {boolean} [opts.raw=false] Whether to return a more detailed\n   * response object.\n   * @return {Promise}\n   */\n  updateAll (mapper, props, query, opts) {\n    const self = this\n    props || (props = {})\n    query || (query = {})\n    opts || (opts = {})\n    let op\n\n    // beforeUpdateAll lifecycle hook\n    op = opts.op = 'beforeUpdateAll'\n    return resolve(self[op](mapper, props, query, opts)).then(function (_props) {\n      // Allow for re-assignment from lifecycle hook\n      props = isUndefined(_props) ? props : _props\n      op = opts.op = 'updateAll'\n      self.dbg(op, mapper, props, query, opts)\n      return self.findAll(mapper, query, { raw: false }).then(function (records) {\n        return self._update(mapper, records, props)\n      })\n    }).then(function (records) {\n      let response = new Response(records, {}, 'updateAll')\n      response.updated = records.length\n      response = self.respond(response, opts)\n\n      // afterUpdateAll lifecycle hook\n      op = opts.op = 'afterUpdateAll'\n      return resolve(self[op](mapper, props, query, opts, response)).then(function (_response) {\n        // Allow for re-assignment from lifecycle hook\n        return isUndefined(_response) ? response : _response\n      })\n    })\n  },\n\n  /**\n   * Update the given records in a single batch.\n   *\n   * @name RedisAdapter#updateMany\n   * @method\n   * @param {Object} mapper The mapper.\n   * @param {Object[]} records The records to update.\n   * @param {Object} [opts] Configuration options.\n   * @param {boolean} [opts.raw=false] Whether to return a more detailed\n   * response object.\n   * @return {Promise}\n   */\n  updateMany (mapper, records, opts) {\n    const self = this\n    records || (records = [])\n    opts || (opts = {})\n    let op\n    const idAttribute = mapper.idAttribute\n\n    records = records.filter(function (record) {\n      return get(record, idAttribute)\n    })\n\n    // beforeUpdateMany lifecycle hook\n    op = opts.op = 'beforeUpdateMany'\n    return resolve(self[op](mapper, records, opts)).then(function (_records) {\n      // Allow for re-assignment from lifecycle hook\n      _records = isUndefined(_records) ? records : _records\n      _records = _records.map(function (record) {\n        return withoutRelations(mapper, record)\n      })\n      op = opts.op = 'updateMany'\n      self.dbg(op, mapper, records, opts)\n      // do\n      const _path = getPath(mapper)\n      const idAttribute = mapper.idAttribute\n      return Promise.all(records.map(function (record) {\n        return self.GET(`${_path}-${get(record, idAttribute)}`).then(function (_record) {\n          if (!_record) {\n            return\n          }\n          return self._update(mapper, _record, record).then(function (records) {\n            return records[0]\n          })\n        })\n      }))\n    }).then(function (_records) {\n      _records = _records.filter(function (record) {\n        return record\n      })\n      let response = new Response(_records, {}, 'updateMany')\n      response.updated = response.data.length\n      response = self.respond(response, opts)\n\n      // afterUpdateMany lifecycle hook\n      op = opts.op = 'afterUpdateMany'\n      return resolve(self[op](mapper, records, opts, response)).then(function (_response) {\n        // Allow for re-assignment from lifecycle hook\n        return isUndefined(_response) ? response : _response\n      })\n    })\n  }\n})\n"],"names":["utils","Adapter","Response","Query"],"mappings":"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"}